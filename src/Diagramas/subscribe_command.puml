@startuml subscribe command
hide footbox
activate Client
participant Client order 10
participant Request order 23

    alt request == Request::Database
        Client -> Request++:
    else Request::Server
        Client -> Request:
    else Request::Publisher
        Client -> Request:
    else Request::Suscriber
        Client -> Request: get()
        participant Subscribe as "SubscriberRequest::Subscribe"
        Request -> Subscribe++:
        return request: SubscriberRequest::Subscribe
    else Request::CloseClient
        Client -> Request:
    else Request::Invalid
        Client -> Request:
    end
    
    return request: SubscriberRequest::Subscribe

    Client -> Subscribe++: execute(\n\tstream, channels, subscriptions,\n\tid, subscription_mode\n)

    alt SubscriberRequest::Subscribe(channels_to_add)
        Subscribe -> Subscribe:  s: Sender<String>,\nr: Receiver<String>
        participant result as "result: String" order 24
        create result
        Subscribe -> result: new()
        loop for channel in channels_to_add
            participant subscriptions as "subscriptions: Vec<String>" order 40
            Subscribe -> subscriptions++: contains(channel)
            return contains
            alt !contains
                Subscribe -> subscriptions++: push(channel)
                deactivate subscriptions
                participant Channels order 25
                Subscribe -> Channels++: add_to_channel(channel, s.clone(), id)
                deactivate Channels
            end

            Subscribe -> subscriptions ++: len()
            return len
            Subscribe -> Subscribe: subscription = "subscribe " + channel + len
            
            Subscribe -> result++: push(subscription)
            deactivate result
        end

        group thread
            loop for msg in r.iter()
                participant Respond order 21
                create Respond
                Subscribe -> Respond: Response::Valid(msg)
                Subscribe -> Respond++: respond(stream)
                deactivate Respond
            end
        end

        Subscribe -> Subscribe: subscription_mode = true;
    end
    return respond: Response::Valid(result)
@enduml